const mongoose = require("mongoose");
const otaconfigSchema = mongoose.Schema(
    { 
    imeiNumber:{type: String},
    iccidNumber:{type: String}, 
    vehicleRegistrationNo:{type: String}, 
    APN: { type: String },
    emergencyMobNo:{type: String},
    haThreshold:{type: String},
    hbThreshold:{type: String}, 
    htThreshold:{type: String}, 
    speedLimit: { type: String },
    primaryIp:{type: String},
    emergencyIp:{type: String},
    aeplIp:{type: String}, 
    tmlServerIp:{type: String}, 
    containerNo: { type: String },
    canBaudrate:{type: String},
    sosAck:{type: String},
    healthPacket:{type: String}, 
    smsAlertBit:{type: String}, 
    sleepModeTimer: { type: String },
    wakeupInterval:{type: String},
    eraseHistory:{type: String},
    simVendorId:{type: String}, 
    uinNumber:{type: String}, 
    secondaryUinNumber: { type: String },
    vinNumber:{type: String},
    engineNumber:{type: String},
    firmwareMode:{type: String}, 
    rtcTime:{type: String}, 
    gpsLocation: { type: String },
    telemetryDataInterval:{type: String},
    canDataInterval:{type: String},
    icCanDataInterval:{type: String}, 
    provisionState:{type: String}, 
    ureaTankCapacity: { type: String },
    numberOfFuelTank:{type: String},
    primaryTankLength:{type: String},
    primaryTankHeight:{type: String}, 
    primaryTankWidth:{type: String}, 
    primaryTankCapacity: { type: String },
    primaryTankDiameter:{type: String},
    primaryFuelTankType: { type: String },
    aftOrNonAft:{type: String},
    secondaryTankLength:{type: String},
    secondaryTankHeight:{type: String}, 
    secondaryTankWidth:{type: String}, 
    secondaryTankCapacity: { type: String },
    secondaryTankDiameter:{type: String},
    secondaryFuelTankType:{type: String},
    antiFuelTheftType:{type: String}, 
    systemDetails:{type: String}, 
    connectionStatus: { type: String },
    certificateSizes:{type: String},
    ioStatus:{type: String},
    accelerometerCalibration:{type: String}, 
    accelerometerCalibrationStatus:{type: String}, 
    ais140NrPktInterval: { type: String },
    ais140HealthPktInterval:{type: String},
    ais140EmergencyPktInterval:{type: String},
    ais140NrPktIntervalOnBattMode:{type: String}, 
    ais140HealthPktIntervalOnBattMode:{type: String}, 
    ais140EmergencyPktIntervalOnBattMode: { type: String },
    deviceReset:{type: String},
    createdAt: { type: Date, default: new Date() },
    updatedAt: { type: Date, default: new Date() },
   }
);

const deviceConfig =  mongoose.model("configParameters", otaconfigSchema, "configParameters");

  module.exports = {
    deviceConfig
  }


